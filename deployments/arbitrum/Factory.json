{
  "address": "0x5Eb4bcAEB78a7a765FA3F7285eE6B3E08CCB2c09",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "slat",
          "type": "bytes32"
        }
      ],
      "name": "AccountCreation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_singleton",
          "type": "address"
        }
      ],
      "name": "addAllowSingleton",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowSingleton",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_singleton",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "stupCode",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "deployProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7e95890c84518dea5aa0f9eb505e3f7d77b73e0e8222e65675af80b25e428de0",
  "receipt": {
    "to": "0x914d7Fec6aaC8cd542e72Bca78B30650d45643d7",
    "from": "0x0f369f61983cb0c4a432E4A81aAAA24F2D48Be45",
    "contractAddress": null,
    "transactionIndex": 2,
    "gasUsed": "1955607",
    "logsBloom": "0x
    "blockHash": "0x0520eec30f23cd2cffaea228fdd2fabf18cb5b740cce1b5ede9a0d5002df2f05",
    "transactionHash": "0x7e95890c84518dea5aa0f9eb505e3f7d77b73e0e8222e65675af80b25e428de0",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 142595399,
        "transactionHash": "0x7e95890c84518dea5aa0f9eb505e3f7d77b73e0e8222e65675af80b25e428de0",
        "address": "0x5Eb4bcAEB78a7a765FA3F7285eE6B3E08CCB2c09",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000914d7fec6aac8cd542e72bca78b30650d45643d7"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x0520eec30f23cd2cffaea228fdd2fabf18cb5b740cce1b5ede9a0d5002df2f05"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 142595399,
        "transactionHash": "0x7e95890c84518dea5aa0f9eb505e3f7d77b73e0e8222e65675af80b25e428de0",
        "address": "0x5Eb4bcAEB78a7a765FA3F7285eE6B3E08CCB2c09",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x000000000000000000000000914d7fec6aac8cd542e72bca78b30650d45643d7",
          "0x0000000000000000000000000f369f61983cb0c4a432e4a81aaaa24f2d48be45"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0x0520eec30f23cd2cffaea228fdd2fabf18cb5b740cce1b5ede9a0d5002df2f05"
      }
    ],
    "blockNumber": 142595399,
    "cumulativeGasUsed": "2236221",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "09a59c7c673a10f149d124c86e476dd0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"slat\",\"type\":\"bytes32\"}],\"name\":\"AccountCreation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_singleton\",\"type\":\"address\"}],\"name\":\"addAllowSingleton\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowSingleton\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_singleton\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"stupCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Albert Huang - <albert@sodiums.com>\",\"details\":\"It deploys Smart Accounts as proxies pointing to `basicImplementation` that is immutable.      This allows keeping the same address for the same Smart Account owner on various chains via CREATE2\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Factory - factory responsible for deploying Smart Accounts using CREATE2 and CREATE\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Factory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport \\\"./Wallet.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @title Factory - factory responsible for deploying Smart Accounts using CREATE2 and CREATE\\n * @dev It deploys Smart Accounts as proxies pointing to `basicImplementation` that is immutable.\\n *      This allows keeping the same address for the same Smart Account owner on various chains via CREATE2\\n * @author Albert Huang - <albert@sodiums.com>\\n */\\ncontract Factory is Ownable {\\n    event AccountCreation(address indexed account, bytes32 slat);\\n\\n    // Prevent ddos attacks\\n    mapping(address => bool) public allowSingleton;\\n\\n    constructor() {\\n        _transferOwnership(tx.origin);\\n    }\\n\\n    function isContract(address _addr) private view returns (bool) {\\n        uint32 size;\\n        assembly {\\n            size := extcodesize(_addr)\\n        }\\n        return (size > 0);\\n    }\\n\\n    function internalAddAllowSingleton(address _singleton) private {\\n        require(isContract(_singleton), \\\"F01\\\");\\n        allowSingleton[_singleton] = true;\\n    }\\n\\n    function addAllowSingleton(address _singleton) public onlyOwner {\\n        internalAddAllowSingleton(_singleton);\\n    }\\n\\n    function deployProxy(\\n        address _singleton,\\n        bytes memory stupCode,\\n        bytes32 salt\\n    ) external returns (address proxy) {\\n        bytes memory creationCode = Wallet.creationCode;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            proxy := create2(\\n                0x0,\\n                add(0x20, creationCode),\\n                mload(creationCode),\\n                salt\\n            )\\n        }\\n        require(address(proxy) != address(0), \\\"Create2 call failed\\\");\\n        (bool successSetup, ) = proxy.call(\\n            abi.encodeWithSignature(\\\"setImpl(address)\\\", _singleton)\\n        );\\n        require(successSetup, \\\"set proxy failed\\\");\\n        (bool success, ) = proxy.call(stupCode);\\n        require(success, \\\"init wallet failed\\\");\\n    }\\n    // off-chain calculation\\n    // return ethers.utils.getCreate2Address(<factory address>, <create2 salt>, ethers.utils.keccak256(creationCode));\\n}\\n\",\"keccak256\":\"0x9be568472bf3a9cafbc86947c53eb1983b350783623c22f25170b97f62e94146\",\"license\":\"MIT\"},\"contracts/Wallet.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\n// @Proxy.sol\\nlibrary Wallet {\\n  bytes internal constant creationCode = hex\\\"608060405234801561001057600080fd5b50610180806100206000396000f3fe60806040526004361061001e5760003560e01c8063691bd2ae14610046575b30543660008037600080366000845af43d6000803e80801561003f573d6000f35b3d6000fd5b005b34801561005257600080fd5b5061004461006136600461011a565b6001600160a01b0381166100bc5760405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420696d706c656d656e746174696f6e2061646472657373000060448201526064015b60405180910390fd5b30546001600160a01b038116156101155760405162461bcd60e51b815260206004820152601a60248201527f496d706c656d656e746174696f6e20616c72656164792073657400000000000060448201526064016100b3565b503055565b60006020828403121561012c57600080fd5b81356001600160a01b038116811461014357600080fd5b939250505056fea26469706673582212207efdfc2f5463e8adb0681461b14417ea7c7651a6359421a66c154326fef5e45d64736f6c63430008110033\\\";\\n}\",\"keccak256\":\"0x058323aaabbf406f492e615404aca8227aa8f5cc174864041f687dca9a063791\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a33610028565b61002332610028565b610078565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107da806100876000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633264c8791461006757806360a1f85e1461007c578063715018a6146100ac5780638da5cb5b146100b4578063aa0f58be146100c5578063f2fde38b146100f8575b600080fd5b61007a6100753660046104d2565b61010b565b005b61008f61008a36600461050a565b61011f565b6040516001600160a01b0390911681526020015b60405180910390f35b61007a610321565b6000546001600160a01b031661008f565b6100e86100d33660046104d2565b60016020526000908152604090205460ff1681565b60405190151581526020016100a3565b61007a6101063660046104d2565b610335565b6101136103ab565b61011c81610405565b50565b600080604051806101c001604052806101a081526020016106056101a091399050828151826020016000f591506001600160a01b03821661019d5760405162461bcd60e51b815260206004820152601360248201527210dc99585d194c8818d85b1b0819985a5b1959606a1b60448201526064015b60405180910390fd5b6040516001600160a01b0386811660248301526000919084169060440160408051601f198184030181529181526020820180516001600160e01b031663348de95760e11b179052516101ef91906105d5565b6000604051808303816000865af19150503d806000811461022c576040519150601f19603f3d011682016040523d82523d6000602084013e610231565b606091505b50509050806102755760405162461bcd60e51b815260206004820152601060248201526f1cd95d081c1c9bde1e4819985a5b195960821b6044820152606401610194565b6000836001600160a01b03168660405161028f91906105d5565b6000604051808303816000865af19150503d80600081146102cc576040519150601f19603f3d011682016040523d82523d6000602084013e6102d1565b606091505b50509050806103175760405162461bcd60e51b81526020600482015260126024820152711a5b9a5d081dd85b1b195d0819985a5b195960721b6044820152606401610194565b5050509392505050565b6103296103ab565b6103336000610466565b565b61033d6103ab565b6001600160a01b0381166103a25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610194565b61011c81610466565b6000546001600160a01b031633146103335760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610194565b803b63ffffffff1661043f5760405162461bcd60e51b815260206004820152600360248201526246303160e81b6044820152606401610194565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146104cd57600080fd5b919050565b6000602082840312156104e457600080fd5b6104ed826104b6565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561051f57600080fd5b610528846104b6565b9250602084013567ffffffffffffffff8082111561054557600080fd5b818601915086601f83011261055957600080fd5b81358181111561056b5761056b6104f4565b604051601f8201601f19908116603f01168101908382118183101715610593576105936104f4565b816040528281528960208487010111156105ac57600080fd5b826020860160208301376000602084830101528096505050505050604084013590509250925092565b6000825160005b818110156105f657602081860181015185830152016105dc565b50600092019182525091905056fe608060405234801561001057600080fd5b50610180806100206000396000f3fe60806040526004361061001e5760003560e01c8063691bd2ae14610046575b30543660008037600080366000845af43d6000803e80801561003f573d6000f35b3d6000fd5b005b34801561005257600080fd5b5061004461006136600461011a565b6001600160a01b0381166100bc5760405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420696d706c656d656e746174696f6e2061646472657373000060448201526064015b60405180910390fd5b30546001600160a01b038116156101155760405162461bcd60e51b815260206004820152601a60248201527f496d706c656d656e746174696f6e20616c72656164792073657400000000000060448201526064016100b3565b503055565b60006020828403121561012c57600080fd5b81356001600160a01b038116811461014357600080fd5b939250505056fea26469706673582212207efdfc2f5463e8adb0681461b14417ea7c7651a6359421a66c154326fef5e45d64736f6c63430008110033a26469706673582212206478fcc6215dc367a0f8133ce57ed9e0183a2c7d91a23068446a4f7cb917a45064736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80633264c8791461006757806360a1f85e1461007c578063715018a6146100ac5780638da5cb5b146100b4578063aa0f58be146100c5578063f2fde38b146100f8575b600080fd5b61007a6100753660046104d2565b61010b565b005b61008f61008a36600461050a565b61011f565b6040516001600160a01b0390911681526020015b60405180910390f35b61007a610321565b6000546001600160a01b031661008f565b6100e86100d33660046104d2565b60016020526000908152604090205460ff1681565b60405190151581526020016100a3565b61007a6101063660046104d2565b610335565b6101136103ab565b61011c81610405565b50565b600080604051806101c001604052806101a081526020016106056101a091399050828151826020016000f591506001600160a01b03821661019d5760405162461bcd60e51b815260206004820152601360248201527210dc99585d194c8818d85b1b0819985a5b1959606a1b60448201526064015b60405180910390fd5b6040516001600160a01b0386811660248301526000919084169060440160408051601f198184030181529181526020820180516001600160e01b031663348de95760e11b179052516101ef91906105d5565b6000604051808303816000865af19150503d806000811461022c576040519150601f19603f3d011682016040523d82523d6000602084013e610231565b606091505b50509050806102755760405162461bcd60e51b815260206004820152601060248201526f1cd95d081c1c9bde1e4819985a5b195960821b6044820152606401610194565b6000836001600160a01b03168660405161028f91906105d5565b6000604051808303816000865af19150503d80600081146102cc576040519150601f19603f3d011682016040523d82523d6000602084013e6102d1565b606091505b50509050806103175760405162461bcd60e51b81526020600482015260126024820152711a5b9a5d081dd85b1b195d0819985a5b195960721b6044820152606401610194565b5050509392505050565b6103296103ab565b6103336000610466565b565b61033d6103ab565b6001600160a01b0381166103a25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610194565b61011c81610466565b6000546001600160a01b031633146103335760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610194565b803b63ffffffff1661043f5760405162461bcd60e51b815260206004820152600360248201526246303160e81b6044820152606401610194565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146104cd57600080fd5b919050565b6000602082840312156104e457600080fd5b6104ed826104b6565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561051f57600080fd5b610528846104b6565b9250602084013567ffffffffffffffff8082111561054557600080fd5b818601915086601f83011261055957600080fd5b81358181111561056b5761056b6104f4565b604051601f8201601f19908116603f01168101908382118183101715610593576105936104f4565b816040528281528960208487010111156105ac57600080fd5b826020860160208301376000602084830101528096505050505050604084013590509250925092565b6000825160005b818110156105f657602081860181015185830152016105dc565b50600092019182525091905056fe608060405234801561001057600080fd5b50610180806100206000396000f3fe60806040526004361061001e5760003560e01c8063691bd2ae14610046575b30543660008037600080366000845af43d6000803e80801561003f573d6000f35b3d6000fd5b005b34801561005257600080fd5b5061004461006136600461011a565b6001600160a01b0381166100bc5760405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420696d706c656d656e746174696f6e2061646472657373000060448201526064015b60405180910390fd5b30546001600160a01b038116156101155760405162461bcd60e51b815260206004820152601a60248201527f496d706c656d656e746174696f6e20616c72656164792073657400000000000060448201526064016100b3565b503055565b60006020828403121561012c57600080fd5b81356001600160a01b038116811461014357600080fd5b939250505056fea26469706673582212207efdfc2f5463e8adb0681461b14417ea7c7651a6359421a66c154326fef5e45d64736f6c63430008110033a26469706673582212206478fcc6215dc367a0f8133ce57ed9e0183a2c7d91a23068446a4f7cb917a45064736f6c63430008110033",
  "devdoc": {
    "author": "Albert Huang - <albert@sodiums.com>",
    "details": "It deploys Smart Accounts as proxies pointing to `basicImplementation` that is immutable.      This allows keeping the same address for the same Smart Account owner on various chains via CREATE2",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Factory - factory responsible for deploying Smart Accounts using CREATE2 and CREATE",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1219,
        "contract": "contracts/Factory.sol:Factory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4757,
        "contract": "contracts/Factory.sol:Factory",
        "label": "allowSingleton",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}